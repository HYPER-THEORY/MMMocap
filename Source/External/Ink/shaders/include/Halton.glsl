/**
 * Halton sequences
 * from https://github.com/tobspr/RenderPipeline
 */

#ifndef HALTON_GLSL
#define HALTON_GLSL

const vec2 HALTON_2D_16[16] = vec2[](
	vec2(0.00000, -0.33333),
	vec2(-0.50000, 0.33333),
	vec2(0.50000, -0.77778),
	vec2(-0.75000, -0.11111),
	vec2(0.25000, 0.55556),
	vec2(-0.25000, -0.55556),
	vec2(0.75000, 0.11111),
	vec2(-0.87500, 0.77778),
	vec2(0.12500, -0.92593),
	vec2(-0.37500, -0.25926),
	vec2(0.62500, 0.40741),
	vec2(-0.62500, -0.70370),
	vec2(0.37500, -0.03704),
	vec2(-0.12500, 0.62963),
	vec2(0.87500, -0.48148),
	vec2(-0.93750, 0.18519)
);

const vec2 HALTON_2D_32[32] = vec2[](
	vec2(0.00000, -0.33333),
	vec2(-0.50000, 0.33333),
	vec2(0.50000, -0.77778),
	vec2(-0.75000, -0.11111),
	vec2(0.25000, 0.55556),
	vec2(-0.25000, -0.55556),
	vec2(0.75000, 0.11111),
	vec2(-0.87500, 0.77778),
	vec2(0.12500, -0.92593),
	vec2(-0.37500, -0.25926),
	vec2(0.62500, 0.40741),
	vec2(-0.62500, -0.70370),
	vec2(0.37500, -0.03704),
	vec2(-0.12500, 0.62963),
	vec2(0.87500, -0.48148),
	vec2(-0.93750, 0.18519),
	vec2(0.06250, 0.85185),
	vec2(-0.43750, -0.85185),
	vec2(0.56250, -0.18519),
	vec2(-0.68750, 0.48148),
	vec2(0.31250, -0.62963),
	vec2(-0.18750, 0.03704),
	vec2(0.81250, 0.70370),
	vec2(-0.81250, -0.40741),
	vec2(0.18750, 0.25926),
	vec2(-0.31250, 0.92593),
	vec2(0.68750, -0.97531),
	vec2(-0.56250, -0.30864),
	vec2(0.43750, 0.35802),
	vec2(-0.06250, -0.75309),
	vec2(0.93750, -0.08642),
	vec2(-0.96875, 0.58025)
);

const vec2 HALTON_2D_64[64] = vec2[](
	vec2(0.00000, -0.33333),
	vec2(-0.50000, 0.33333),
	vec2(0.50000, -0.77778),
	vec2(-0.75000, -0.11111),
	vec2(0.25000, 0.55556),
	vec2(-0.25000, -0.55556),
	vec2(0.75000, 0.11111),
	vec2(-0.87500, 0.77778),
	vec2(0.12500, -0.92593),
	vec2(-0.37500, -0.25926),
	vec2(0.62500, 0.40741),
	vec2(-0.62500, -0.70370),
	vec2(0.37500, -0.03704),
	vec2(-0.12500, 0.62963),
	vec2(0.87500, -0.48148),
	vec2(-0.93750, 0.18519),
	vec2(0.06250, 0.85185),
	vec2(-0.43750, -0.85185),
	vec2(0.56250, -0.18519),
	vec2(-0.68750, 0.48148),
	vec2(0.31250, -0.62963),
	vec2(-0.18750, 0.03704),
	vec2(0.81250, 0.70370),
	vec2(-0.81250, -0.40741),
	vec2(0.18750, 0.25926),
	vec2(-0.31250, 0.92593),
	vec2(0.68750, -0.97531),
	vec2(-0.56250, -0.30864),
	vec2(0.43750, 0.35802),
	vec2(-0.06250, -0.75309),
	vec2(0.93750, -0.08642),
	vec2(-0.96875, 0.58025),
	vec2(0.03125, -0.53086),
	vec2(-0.46875, 0.13580),
	vec2(0.53125, 0.80247),
	vec2(-0.71875, -0.90123),
	vec2(0.28125, -0.23457),
	vec2(-0.21875, 0.43210),
	vec2(0.78125, -0.67901),
	vec2(-0.84375, -0.01235),
	vec2(0.15625, 0.65432),
	vec2(-0.34375, -0.45679),
	vec2(0.65625, 0.20988),
	vec2(-0.59375, 0.87654),
	vec2(0.40625, -0.82716),
	vec2(-0.09375, -0.16049),
	vec2(0.90625, 0.50617),
	vec2(-0.90625, -0.60494),
	vec2(0.09375, 0.06173),
	vec2(-0.40625, 0.72840),
	vec2(0.59375, -0.38272),
	vec2(-0.65625, 0.28395),
	vec2(0.34375, 0.95062),
	vec2(-0.15625, -0.95062),
	vec2(0.84375, -0.28395),
	vec2(-0.78125, 0.38272),
	vec2(0.21875, -0.72840),
	vec2(-0.28125, -0.06173),
	vec2(0.71875, 0.60494),
	vec2(-0.53125, -0.50617),
	vec2(0.46875, 0.16049),
	vec2(-0.03125, 0.82716),
	vec2(0.96875, -0.87654),
	vec2(-0.98438, -0.20988)
);

const vec3 HALTON_3D_16[16] = vec3[](
	vec3(0.00000, -0.33333, -0.60000),
	vec3(-0.50000, 0.33333, -0.20000),
	vec3(0.50000, -0.77778, 0.20000),
	vec3(-0.75000, -0.11111, 0.60000),
	vec3(0.25000, 0.55556, -0.92000),
	vec3(-0.25000, -0.55556, -0.52000),
	vec3(0.75000, 0.11111, -0.12000),
	vec3(-0.87500, 0.77778, 0.28000),
	vec3(0.12500, -0.92593, 0.68000),
	vec3(-0.37500, -0.25926, -0.84000),
	vec3(0.62500, 0.40741, -0.44000),
	vec3(-0.62500, -0.70370, -0.04000),
	vec3(0.37500, -0.03704, 0.36000),
	vec3(-0.12500, 0.62963, 0.76000),
	vec3(0.87500, -0.48148, -0.76000),
	vec3(-0.93750, 0.18519, -0.36000)
);

const vec3 HALTON_3D_32[32] = vec3[](
	vec3(0.00000, -0.33333, -0.60000),
	vec3(-0.50000, 0.33333, -0.20000),
	vec3(0.50000, -0.77778, 0.20000),
	vec3(-0.75000, -0.11111, 0.60000),
	vec3(0.25000, 0.55556, -0.92000),
	vec3(-0.25000, -0.55556, -0.52000),
	vec3(0.75000, 0.11111, -0.12000),
	vec3(-0.87500, 0.77778, 0.28000),
	vec3(0.12500, -0.92593, 0.68000),
	vec3(-0.37500, -0.25926, -0.84000),
	vec3(0.62500, 0.40741, -0.44000),
	vec3(-0.62500, -0.70370, -0.04000),
	vec3(0.37500, -0.03704, 0.36000),
	vec3(-0.12500, 0.62963, 0.76000),
	vec3(0.87500, -0.48148, -0.76000),
	vec3(-0.93750, 0.18519, -0.36000),
	vec3(0.06250, 0.85185, 0.04000),
	vec3(-0.43750, -0.85185, 0.44000),
	vec3(0.56250, -0.18519, 0.84000),
	vec3(-0.68750, 0.48148, -0.68000),
	vec3(0.31250, -0.62963, -0.28000),
	vec3(-0.18750, 0.03704, 0.12000),
	vec3(0.81250, 0.70370, 0.52000),
	vec3(-0.81250, -0.40741, 0.92000),
	vec3(0.18750, 0.25926, -0.98400),
	vec3(-0.31250, 0.92593, -0.58400),
	vec3(0.68750, -0.97531, -0.18400),
	vec3(-0.56250, -0.30864, 0.21600),
	vec3(0.43750, 0.35802, 0.61600),
	vec3(-0.06250, -0.75309, -0.90400),
	vec3(0.93750, -0.08642, -0.50400),
	vec3(-0.96875, 0.58025, -0.10400)
);

const vec3 HALTON_3D_64[64] = vec3[](
	vec3(0.00000, -0.33333, -0.60000),
	vec3(-0.50000, 0.33333, -0.20000),
	vec3(0.50000, -0.77778, 0.20000),
	vec3(-0.75000, -0.11111, 0.60000),
	vec3(0.25000, 0.55556, -0.92000),
	vec3(-0.25000, -0.55556, -0.52000),
	vec3(0.75000, 0.11111, -0.12000),
	vec3(-0.87500, 0.77778, 0.28000),
	vec3(0.12500, -0.92593, 0.68000),
	vec3(-0.37500, -0.25926, -0.84000),
	vec3(0.62500, 0.40741, -0.44000),
	vec3(-0.62500, -0.70370, -0.04000),
	vec3(0.37500, -0.03704, 0.36000),
	vec3(-0.12500, 0.62963, 0.76000),
	vec3(0.87500, -0.48148, -0.76000),
	vec3(-0.93750, 0.18519, -0.36000),
	vec3(0.06250, 0.85185, 0.04000),
	vec3(-0.43750, -0.85185, 0.44000),
	vec3(0.56250, -0.18519, 0.84000),
	vec3(-0.68750, 0.48148, -0.68000),
	vec3(0.31250, -0.62963, -0.28000),
	vec3(-0.18750, 0.03704, 0.12000),
	vec3(0.81250, 0.70370, 0.52000),
	vec3(-0.81250, -0.40741, 0.92000),
	vec3(0.18750, 0.25926, -0.98400),
	vec3(-0.31250, 0.92593, -0.58400),
	vec3(0.68750, -0.97531, -0.18400),
	vec3(-0.56250, -0.30864, 0.21600),
	vec3(0.43750, 0.35802, 0.61600),
	vec3(-0.06250, -0.75309, -0.90400),
	vec3(0.93750, -0.08642, -0.50400),
	vec3(-0.96875, 0.58025, -0.10400),
	vec3(0.03125, -0.53086, 0.29600),
	vec3(-0.46875, 0.13580, 0.69600),
	vec3(0.53125, 0.80247, -0.82400),
	vec3(-0.71875, -0.90123, -0.42400),
	vec3(0.28125, -0.23457, -0.02400),
	vec3(-0.21875, 0.43210, 0.37600),
	vec3(0.78125, -0.67901, 0.77600),
	vec3(-0.84375, -0.01235, -0.74400),
	vec3(0.15625, 0.65432, -0.34400),
	vec3(-0.34375, -0.45679, 0.05600),
	vec3(0.65625, 0.20988, 0.45600),
	vec3(-0.59375, 0.87654, 0.85600),
	vec3(0.40625, -0.82716, -0.66400),
	vec3(-0.09375, -0.16049, -0.26400),
	vec3(0.90625, 0.50617, 0.13600),
	vec3(-0.90625, -0.60494, 0.53600),
	vec3(0.09375, 0.06173, 0.93600),
	vec3(-0.40625, 0.72840, -0.96800),
	vec3(0.59375, -0.38272, -0.56800),
	vec3(-0.65625, 0.28395, -0.16800),
	vec3(0.34375, 0.95062, 0.23200),
	vec3(-0.15625, -0.95062, 0.63200),
	vec3(0.84375, -0.28395, -0.88800),
	vec3(-0.78125, 0.38272, -0.48800),
	vec3(0.21875, -0.72840, -0.08800),
	vec3(-0.28125, -0.06173, 0.31200),
	vec3(0.71875, 0.60494, 0.71200),
	vec3(-0.53125, -0.50617, -0.80800),
	vec3(0.46875, 0.16049, -0.40800),
	vec3(-0.03125, 0.82716, -0.00800),
	vec3(0.96875, -0.87654, 0.39200),
	vec3(-0.98438, -0.20988, 0.79200)
);

#endif
